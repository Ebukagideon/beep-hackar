syntax = "proto3";

package beep.intent;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "beep/intent/params.proto";

option go_package = "beep/x/intent/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams     (MsgUpdateParams    ) returns (MsgUpdateParamsResponse    );
  rpc CreateIntent     (MsgCreateIntent    ) returns (MsgCreateIntentResponse    );
  rpc AcceptIntent     (MsgAcceptIntent    ) returns (MsgAcceptIntentResponse    );
  rpc SendIntentPacket (MsgSendIntentPacket) returns (MsgSendIntentPacketResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                     "authority";
  option           (amino.name) = "beep/x/intent/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateIntent {
  option (cosmos.msg.v1.signer) = "creator";
  string creator     = 1;
  string intentType  = 2;
  string memo        = 3;
  string targetChain = 4;
  int32  minOutput   = 5;
}

message MsgCreateIntentResponse {}

message MsgAcceptIntent {
  option (cosmos.msg.v1.signer) = "executor";
  string executor = 1;
  uint64 id       = 2;
}

message MsgAcceptIntentResponse {}

message MsgSendIntentPacket {
  option (cosmos.msg.v1.signer) = "creator";
  string intentType       =  5;
  string memo             =  6;
  string targetChain      =  7;
  uint64 minOutput        =  8;
  string status           =  9;
  string executor         = 10;
  uint64 expiryHeight     = 11;
  string creator          =  1;
  string port             =  2;
  string channelID        =  3;
  uint64 timeoutTimestamp =  4;
}

message MsgSendIntentPacketResponse {}

